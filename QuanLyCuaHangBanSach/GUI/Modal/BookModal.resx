<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>