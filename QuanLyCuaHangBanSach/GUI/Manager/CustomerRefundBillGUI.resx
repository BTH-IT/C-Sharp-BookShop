<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>